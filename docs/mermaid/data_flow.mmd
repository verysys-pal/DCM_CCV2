%%{init: {"theme":"base","themeVariables":{"background":"#ffffff","primaryTextColor":"#111111"}}}%%
flowchart LR
  %% IOC 및 DB
  subgraph IOC[EPICS IOC]
    STCMD[iocBoot/iocDCM_CCV2/st.cmd]
    DB["Record DB<br/>(db/dcm_cryo.db)"]
    HIST["History waveforms<br/>BL:DCM:CRYO:HIST:*(waveforms)"]
  end

  %% 브리지와 선택 로직
  subgraph Bridge[PV Bridge]
    BRIDGE[pv_bridge.py]
    OPER["sim.logic.operating (optional)"]
    ILK["sim.logic.interlock (optional)"]
  end

  %% 시뮬레이터 코어
  subgraph Sim[Simulator]
    MODEL["sim.core.CryoCoolerSim"]
  end

  %% GUI
  subgraph GUI[GUI/BOB]
    BOB[gui/bob/main.bob]
  end

  %% 설정 파일
  subgraph CFG[Configs]
    INIT["PV init/seeds<br/>tools/pv_init.yaml"]
    TUNE["Tuning overlay (optional)<br/>tools/tuning.yaml"]
    OPERCFG["Operating params<br/>tools/operating.yaml"]
    ILKCFG["Interlock thresholds<br/>tools/interlock.yaml"]
  end

  %% 부팅/레코드 로드
  STCMD --> DB

  %% 설정 → 브리지/로직
  INIT -->|"config + PV seeds"| BRIDGE
  TUNE -->|"overlay merge &#40;config/pvs&#41;"| BRIDGE
  OPERCFG -.->|"load params"| OPER
  ILKCFG -.->|"load thresholds"| ILK

  %% IOC ↔ 브리지
  DB -->|"commands, setpoints, inputs<br/>(e.g., SUBCOOLER.TEMP, FT18, PT3:SP, DCM:POWER)"| BRIDGE
  BRIDGE -->|"temperatures, pressures, flows, status/state, alarms"| DB
  BRIDGE -->|"history arrays"| HIST

  %% 브리지 ↔ 시뮬레이터
  BRIDGE <-->|"simulation step/state exchange"| MODEL

  %% 브리지에서 사용하는 선택 로직
  BRIDGE -.->|"state transitions"| OPER
  BRIDGE -.->|"severity/safety"| ILK

  %% GUI ↔ IOC
  BOB <-->|"monitor/control"| DB
  BOB ----|"trend view"| HIST

  %% Cross links
  click BRIDGE "pv_bridge_overview.mmd" "Open: PV Bridge overview"
